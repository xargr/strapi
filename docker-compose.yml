version: '3.7'
services:
  caddy:
    container_name: server
    image: caddy/caddy:2.6.2-alpine
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - api
      - ui
      - db
    volumes:
      - $PWD/Caddyfile:/etc/caddy/Caddyfile
      - $PWD/site:/srv
      - caddy_data:/data
      - caddy_config:/config
  api:
    container_name: api
    build: 
      context: "./api"
      dockerfile: "Dockerfile"
    restart: unless-stopped
    ports:
      - "1337:1337"
    depends_on:
      - db
    environment:
      DATABASE_HOST: db
      DATABASE_PORT: 3306
      DATABASE_NAME: strapi_app
      DATABASE_USERNAME: root
      DATABASE_PASSWORD: iZId#P8999HU
      APP_KEYS: GYBkhZGdiVKfuE482bWm9w==,6VOBkK6wSVz/vdg7CgHT9g==,MHcJJm29z4mCfVy8C/9krQ==,dHROTSsDkyzSJnqB+7t2lg==
      API_TOKEN_SALT: rYhe4T560smIz4kCdtkNlA==
      ADMIN_JWT_SECRET: wshJuRZw7Lh3mjAfeLKkc3==
      JWT_SECRET: senQbGL4rtC2Hji1AB13fg==
      NODE_ENV: production
    volumes:
      - "./api:/api"
      - "/api/node_modules"
  db:
    container_name: db
    image: mysql:5.7
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: iZId#P8999HU
      MYSQL_DATABASE: strapi_app
    volumes:
      - "./data/db:/var/lib/mysql"
  ui:
    container_name: ui
    build: 
      context: "./client"
      dockerfile: "Dockerfile"
    restart: unless-stopped
    environment:
      NODE_ENV: development
    depends_on:
      - db
    ports:
      - "3000:3000"
    volumes:
      - "./client:/client"
      - "/client/node_modules"
volumes:
  api:
  client:
  data:
  caddy_data:
  caddy_config: